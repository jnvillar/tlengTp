
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'TRUE FALSE IF THEN ELSE ZERO VARIABLE BACKSLASH NUMBER DOT 2DOTS OPENPARENTHESIS CLOSEPARENTHESIS SUCC PRED ISZEROexpression : ZEROexpression : TRUEexpression : FALSEexpression : IF expression THEN expression ELSE expressionexpression : NUMBERexpression : PRED OPENPARENTHESIS expression CLOSEPARENTHESISexpression : SUCC OPENPARENTHESIS expression CLOSEPARENTHESISexpression : ISZERO OPENPARENTHESIS expression CLOSEPARENTHESISexpression : BACKSLASH VARIABLE 2DOTS expression DOT expression'
    
_lr_action_items = {'CLOSEPARENTHESIS':([1,5,6,9,17,18,19,22,23,24,28,29,],[-3,-5,-1,-2,22,23,24,-7,-6,-8,-9,-4,]),'THEN':([1,5,6,9,15,22,23,24,28,29,],[-3,-5,-1,-2,20,-7,-6,-8,-9,-4,]),'OPENPARENTHESIS':([3,7,8,],[12,13,14,]),'FALSE':([0,10,12,13,14,16,20,26,27,],[1,1,1,1,1,1,1,1,1,]),'PRED':([0,10,12,13,14,16,20,26,27,],[7,7,7,7,7,7,7,7,7,]),'2DOTS':([11,],[16,]),'ZERO':([0,10,12,13,14,16,20,26,27,],[6,6,6,6,6,6,6,6,6,]),'NUMBER':([0,10,12,13,14,16,20,26,27,],[5,5,5,5,5,5,5,5,5,]),'BACKSLASH':([0,10,12,13,14,16,20,26,27,],[2,2,2,2,2,2,2,2,2,]),'VARIABLE':([2,],[11,]),'SUCC':([0,10,12,13,14,16,20,26,27,],[3,3,3,3,3,3,3,3,3,]),'ISZERO':([0,10,12,13,14,16,20,26,27,],[8,8,8,8,8,8,8,8,8,]),'ELSE':([1,5,6,9,22,23,24,25,28,29,],[-3,-5,-1,-2,-7,-6,-8,27,-9,-4,]),'TRUE':([0,10,12,13,14,16,20,26,27,],[9,9,9,9,9,9,9,9,9,]),'$end':([1,4,5,6,9,22,23,24,28,29,],[-3,0,-5,-1,-2,-7,-6,-8,-9,-4,]),'DOT':([1,5,6,9,21,22,23,24,28,29,],[-3,-5,-1,-2,26,-7,-6,-8,-9,-4,]),'IF':([0,10,12,13,14,16,20,26,27,],[10,10,10,10,10,10,10,10,10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,10,12,13,14,16,20,26,27,],[4,15,17,18,19,21,25,28,29,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> ZERO','expression',1,'p_expression_zero','parser.py',8),
  ('expression -> TRUE','expression',1,'p_expression_true','parser.py',12),
  ('expression -> FALSE','expression',1,'p_expression_false','parser.py',16),
  ('expression -> IF expression THEN expression ELSE expression','expression',6,'p_expression_if_then_else','parser.py',20),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',27),
  ('expression -> PRED OPENPARENTHESIS expression CLOSEPARENTHESIS','expression',4,'p_expression_pred','parser.py',31),
  ('expression -> SUCC OPENPARENTHESIS expression CLOSEPARENTHESIS','expression',4,'p_expression_succ','parser.py',39),
  ('expression -> ISZERO OPENPARENTHESIS expression CLOSEPARENTHESIS','expression',4,'p_expression_is_zero','parser.py',43),
  ('expression -> BACKSLASH VARIABLE 2DOTS expression DOT expression','expression',6,'p_expression_lambda','parser.py',50),
]
